openapi: 3.0.1
info:
  title: Argil API
  description: API for AI clone video generation
  version: 1.0.0
  license:
    name: MIT
servers:
  - url: http://api.argil.ai
security:
  - ApiKeyAuth: []
paths:
  /voices:
    get:
      summary: List all voices
      description: Returns an array of Voice objects available for the user
      responses:
        200:
          description: An array of voices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voice'
        400:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /avatars:
    get:
      summary: List all avatars
      description: Returns an array of Avatar objects available for the user
      responses:
        200:
          description: An array of avatars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Avatar'
        400:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /videos:
    get:
      summary: Paginated list of Videos
      description: Returns a paginated array of Videos
      responses:
        200:
          description: A paginated list of Videos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
        400:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new Video
      description: Creates a new Video with the specified details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoCreateArgs'
      responses:
        201:
          description: Successfully created Video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /videos/{id}:
    get:
      summary: Get a Video by id
      description: Returns a single Video identified by its id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: The id of the Video to retrieve
      responses:
        200:
          description: Detailed information about the Video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        404:
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a Video by id
      description: Delete a single Video identified by its id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: The id of the Video to delete
      responses:
        200:
          description: Success message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        404:
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /render/{id}:
    post:
      summary: Render a Video by id
      description: Returns a single Video object, with its updated status and information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: The id of the Video to render
      responses:
        200:
          description: Detailed information about the Video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        404:
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Voice:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          type: string
        sampleUrl:
          type: string
    Avatar:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        gestures:
          type: array
          description: "A list of labelized gestures available for your avatar."
          items:
            type: object
            properties:
              id:
                type: string
                description: "Allows identifying the gesture when using it for a specific moment."
              label:
                type: string
                description: "A label for user readability. Can be setup from the app's UI."
        status:
          type: string
        width:
          type: integer
        height:
          type: integer
    Video:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          type: string
          description: "Can be either 'IDLE', 'GENERATING_AUDIO', 'GENERATING_VIDEO' or 'FAILED'."
        moments:
          type: array
          description: "An array of Moment items, each representing a portion of the complete video."
          items:
            type: object
            properties:
              transcript:
                type: string
                description: "A portion of the complete transcript. Current limit: 250 characters."
              audioUrl:
                type: string
                description: "The audio that will be used for the video rendering. Automatically generated from the transcript when not provided. Current limit: 20 seconds."
              videoUrl:
                type: string
                description: "The url of the avatar rendering video for this moment."
              avatar:
                type: string
                description: "The id of the avatar to be used for this moment."
              voice:
                type: string
                description: "The id of the voice to be used for this moment."
        videoUrl:
          type: string
          description: "The url of the final avatar rendering video, containing all the moments merged."
    VideoCreateArgs:
      type: object
      required:
        - name
        - moments
      properties:
        name:
          type: string
        moments:
          type: array
          description: "An array of Moment items, each representing a portion of the complete video."
          items:
            type: object
            required:
              - transcript
              - avatar
              - voice
            properties:
              transcript:
                type: string
                description: "A portion of the complete transcript. Current limit: 250 characters."
              audioUrl:
                type: string
                description: "Optional url to the audio to be used for the video rendering, for bypassing our audio generation model. Current limit: 20 seconds."
              avatar:
                type: string
                description: "The id of the avatar to be used for this moment."
              voice:
                type: string
                description: "The id of the voice to be used for this moment."
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Success:
      type: object
      properties:
        message:
          type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
